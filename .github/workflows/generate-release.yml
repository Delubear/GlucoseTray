# To create a release:
# git tag v1.0.0
# git push origin v1.0.0
# or
# use Github UI -> Create Release -> Create New Tag -> v1.0.0 -> Publish Release

name: Create release

on:
  push:
    tags:
      - "v*"

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4.1.2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: 9.x
    - name: Install dependencies
      run: dotnet restore -p:SelfContained=true
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Dotnet Tests
      uses: EasyDesk/action-dotnet-test@v1.3.0
      with:
        # Additional arguments to pass to 'dotnet test'.
        #test-args: # optional
        # The build configuration to use (defaults to 'Release').
        #build-configuration: # optional, default is Release
        # The path to the project or solution to test (defaults to the current directory).
        #path: # optional, default is .
        # Whether or not to skip the build using the '--no-build' flag (defaults to true).
        skip-build: true # optional, default is true
    - name: Publish
      run: dotnet publish GlucoseTray\GlucoseTray.csproj --configuration Release --no-restore  -p:PublishProfile=GlucoseTray\Properties\PublishProfiles\PublishToSingleSelfContainedExe.pubxml
    - name: Publish
      run: dotnet publish GlucoseTray\GlucoseTray.csproj --configuration Release --no-restore  -p:PublishProfile=GlucoseTray\Properties\PublishProfiles\PublishToSingleSelfContainedExeWthoutFramework.pubxml
    - uses: release-drafter/release-drafter@v6
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@master
    - name: Create Release
      uses: ncipollo/release-action@v1.16.0
      with:
        # An optional flag which indicates if we should update a release if it already exists. Defaults to false.
        allowUpdates: true
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        #artifact: 
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        #artifacts: './GlucoseTray/bin/Release/net5.0-windows/win-x64/publish/'
        artifacts: "./GlucoseTray/bin/Release/net9.0-windows7.0/publish/win-x64/GlucoseTray.exe,./GlucoseTray/bin/Release/net9.0-windows7.0/publish/win-x64-small/GlucoseTray-Slim.exe,./README.md"
        # The content type of the artifact. Defaults to raw
        #artifactContentType: # optional, default is 
        # An optional body for the release.
        #body: # optional, default is 
        # An optional body file for the release. This should be the path to the file
        #bodyFile: # optional, default is 
        #bodyFile: "${{ steps.notes.outputs.release-notes }}"
        # An optional commit reference. This will be used to create the tag if it does not exist.
        #commit: # optional, default is 
        generateReleaseNotes: true
        # Optionally marks this release as a draft release. Set to true to enable.
        # draft: false
        # An optional name for the release. If this is omitted the tag will be used.
        name: "Glucose Tray ${{ github.ref_name }}"
        # Indicates if the release body should be omitted.
        #omitBody: # optional, default is false
        # Indicates if the release body should be omitted during updates. The body will still be applied for newly created releases. This will preserve the existing body during updates.
        #omitBodyDuringUpdate: # optional, default is false
        # Indicates if the release name should be omitted.
        #omitName: # optional, default is false
        # Indicates if the release name should be omitted during updates. The name will still be applied for newly created releases. This will preserve the existing name during updates.
        #omitNameDuringUpdate: # optional, default is false
        # Optionally marks this release as prerelease. Set to true to enable.
        # prerelease: false
        # Indicates if existing release artifacts should be replaced. Defaults to true.
        replacesArtifacts: true
        # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
        #tag: "$tag"
        # The Github token.
        token: ${{ secrets.GITHUB_TOKEN }}

