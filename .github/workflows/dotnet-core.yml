name: .NET Core

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: 8.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Dotnet Tests
      # You may pin to the exact commit or the version.
      # uses: EasyDesk/action-dotnet-test@228a60327933ff6200594e89a6fa906a69e5f1e6
      uses: EasyDesk/action-dotnet-test@v1.0.0
      with:
        # Additional arguments to pass to 'dotnet test'.
        #test-args: # optional
        # The build configuration to use (defaults to 'Release').
        #build-configuration: # optional, default is Release
        # The path to the project or solution to test (defaults to the current directory).
        #path: # optional, default is .
        # Whether or not to skip the build using the '--no-build' flag (defaults to true).
        skip-build: true # optional, default is true
    - name: Publish
      run: dotnet publish GlucoseTray\GlucoseTray.csproj --configuration Release --no-restore  -p:PublishProfile=GlucoseTray\Properties\PublishProfiles\PublishToSingleSelfContainedExe.pubxml
    - name: read JSON property
      id: version
      uses: notiz-dev/github-action-json-property@release
      with:
        # path to json file
        path: ./GlucoseTray/appsettings.json
        # which property to read
        prop_path: appsettings.Version
    - name: Create Release
      uses: ncipollo/release-action@v1.14.0
      with:
        # An optional flag which indicates if we should update a release if it already exists. Defaults to false.
        allowUpdates: true
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        #artifact: 
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        #artifacts: './GlucoseTray/bin/Release/net5.0-windows/win-x64/publish/'
        artifacts: './GlucoseTray/bin/Release/net8.0-windows/win-x64/publish/GlucoseTray.exe'
        # The content type of the artifact. Defaults to raw
        #artifactContentType: # optional, default is 
        # An optional body for the release.
        #body: # optional, default is 
        # An optional body file for the release. This should be the path to the file
        #bodyFile: # optional, default is 
        # An optional commit reference. This will be used to create the tag if it does not exist.
        #commit: # optional, default is 
        # Optionally marks this release as a draft release. Set to true to enable.
        draft: false
        # An optional name for the release. If this is omitted the tag will be used.
        name: 'Glucose Tray ${{steps.version.outputs.prop}}'
        # Indicates if the release body should be omitted.
        #omitBody: # optional, default is false
        # Indicates if the release body should be omitted during updates. The body will still be applied for newly created releases. This will preserve the existing body during updates.
        #omitBodyDuringUpdate: # optional, default is false
        # Indicates if the release name should be omitted.
        #omitName: # optional, default is false
        # Indicates if the release name should be omitted during updates. The name will still be applied for newly created releases. This will preserve the existing name during updates.
        #omitNameDuringUpdate: # optional, default is false
        # Optionally marks this release as prerelease. Set to true to enable.
        prerelease: false
        # Indicates if existing release artifacts should be replaced. Defaults to true.
        replacesArtifacts: true
        # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
        tag: ${{steps.version.outputs.prop}} 
        # The Github token.
        token: ${{ secrets.GITHUB_TOKEN }}

